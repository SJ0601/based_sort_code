//快排
int partitioned(int *a,int low,int high)
{
    int prv = a[low];//选取枢轴元素
    while(low < high)
    {
        while(low < high && prv < a[high])
            high--;
        if(low >= high)//当因为low >= high结束循环，但是如果不加if，则会继续执行下面的赋值，但实际上这次循环应该停止了
            break;
        a[low] = a[high];
        while(low < high && prv > a[low])
            low++;
        if(low >= high)
            break;
        a[high] = a[low];
    }
    a[low] = prv;
    return low;
}
void quick_sort(int *a,int low,int high)
{
    if(low < high)
    {
        int p = partitioned(a,low,high);//每次划分均确定一个枢轴元素的位置
        quick_sort(a,low,p-1);//用枢轴元素将数组分为两个子表继续
        quick_sort(a,p+1,high);
    }

}